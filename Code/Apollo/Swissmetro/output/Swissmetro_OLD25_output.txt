Model run by alexi using Apollo 0.3.2 on R 4.2.3 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : Swissmetro
Model description                           : Mixed logit model on Swissmetro, uncorrelated Lognormals in preference space
Model run at                                : 2024-05-01 16:57:46
Estimation method                           : bfgs
Model diagnosis                             : successful convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -22.251038
     reciprocal of condition number         : 0.0325134
Number of individuals                       : 752
Number of rows in database                  : 6768
Number of modelled outcomes                 : 6768

Number of cores used                        :  4 
Number of inter-individual draws            : 1000 (halton)

LL(start)                                   : -5783.35
LL at equal shares, LL(0)                   : -6964.66
LL at observed shares, LL(C)                : -5865
LL(final)                                   : -4359.93
Rho-squared vs equal shares                  :  0.374 
Adj.Rho-squared vs equal shares              :  0.3733 
Rho-squared vs observed shares               :  0.2566 
Adj.Rho-squared vs observed shares           :  0.2561 
AIC                                         :  8729.86 
BIC                                         :  8763.96 

Estimated parameters                        : 5
Time taken (hh:mm:ss)                       :  00:03:1.1 
     pre-estimation                         :  00:01:1.22 
     estimation                             :  00:01:4.92 
          initial estimation                :  00:00:55.06 
          estimation after rescaling        :  00:00:9.86 
     post-estimation                        :  00:00:54.96 
Iterations                                  :  16  
     initial estimation                     :  15 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
             Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
ASC_CAR        0.2818     0.05659       4.980      0.1074         2.623
ASC_TRAIN     -0.5741     0.08157      -7.038      0.1451        -3.958
ASC_SM         0.0000          NA          NA          NA            NA
B_COST        -1.6542     0.07770     -21.289      0.2925        -5.656
B_TIME        -3.2207     0.18685     -17.237      0.2208       -14.589
B_TIME_S       3.6478     0.17294      21.093      0.2405        15.166


Overview of choices for MNL model component :
                                    alt1    alt2    alt3
Times available                  6768.00 6768.00 5607.00
Times chosen                      908.00 4090.00 1770.00
Percentage chosen overall          13.42   60.43   26.15
Percentage chosen when available   13.42   60.43   31.57



Classical covariance matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR      0.003203    0.002881  7.3754e-04   -0.004297    0.001237
ASC_TRAIN    0.002881    0.006654  7.6469e-04   -0.006429 -7.3123e-04
B_COST     7.3754e-04  7.6469e-04    0.006037    0.001779   -0.002351
B_TIME      -0.004297   -0.006429    0.001779    0.034913   -0.011017
B_TIME_S     0.001237 -7.3123e-04   -0.002351   -0.011017    0.029907

Robust covariance matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR      0.011542    0.008939    0.003822    -0.01096    0.003388
ASC_TRAIN    0.008939    0.021040    0.007271    -0.01478  1.2002e-04
B_COST       0.003822    0.007271    0.085542     0.02221   -0.021344
B_TIME      -0.010955   -0.014778    0.022212     0.04874   -0.025866
B_TIME_S     0.003388  1.2002e-04   -0.021344    -0.02587    0.057854

Classical correlation matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR        1.0000     0.62399      0.1677     -0.4064     0.12637
ASC_TRAIN      0.6240     1.00000      0.1206     -0.4218    -0.05184
B_COST         0.1677     0.12065      1.0000      0.1225    -0.17497
B_TIME        -0.4064    -0.42182      0.1225      1.0000    -0.34096
B_TIME_S       0.1264    -0.05184     -0.1750     -0.3410     1.00000

Robust correlation matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR        1.0000    0.573635      0.1216     -0.4619    0.131100
ASC_TRAIN      0.5736    1.000000      0.1714     -0.4615    0.003440
B_COST         0.1216    0.171378      1.0000      0.3440   -0.303407
B_TIME        -0.4619   -0.461503      0.3440      1.0000   -0.487125
B_TIME_S       0.1311    0.003440     -0.3034     -0.4871    1.000000

 20 worst outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 394         0.002462236
  56         0.015187733
  58         0.034893585
 104         0.039739535
 102         0.115809117
 393         0.135263559
 105         0.136180057
 362         0.163111568
 351         0.183255697
  19         0.189561996
 796         0.189936465
 937         0.190102871
  77         0.204103890
 578         0.204926531
  81         0.206900876
 867         0.207184261
 783         0.209386140
  63         0.217311726
 454         0.221805549
 283         0.226334313

Changes in parameter estimates from starting values:
              Initial    Estimate  Difference
ASC_CAR         0.000      0.2818      0.2818
ASC_TRAIN       0.000     -0.5741     -0.5741
ASC_SM          0.000      0.0000      0.0000
B_COST          0.000     -1.6542     -1.6542
B_TIME          0.000     -3.2207     -3.2207
B_TIME_S        1.000      3.6478      2.6478

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                         
modelName              "Swissmetro"                                                                  
modelDescr             "Mixed logit model on Swissmetro, uncorrelated Lognormals in preference space"
indivID                "ID"                                                                          
nCores                 "4"                                                                           
outputDirectory        "output/"                                                                     
mixing                 "TRUE"                                                                        
debug                  "FALSE"                                                                       
workInLogs             "FALSE"                                                                       
seed                   "13"                                                                          
HB                     "FALSE"                                                                       
noValidation           "FALSE"                                                                       
noDiagnostics          "FALSE"                                                                       
calculateLLC           "TRUE"                                                                        
panelData              "TRUE"                                                                        
analyticGrad           "TRUE"                                                                        
analyticGrad_manualSet "FALSE"                                                                       
overridePanel          "FALSE"                                                                       
preventOverridePanel   "FALSE"                                                                       
noModification         "FALSE"                                                                       

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling in estimation
---------------------
              Value
ASC_CAR   0.2818119
ASC_TRAIN 0.5741004
B_COST    1.6538769
B_TIME    3.2207690
B_TIME_S  3.6474295

Scaling used in computing Hessian
---------------------------------
              Value
ASC_CAR   0.2818061
ASC_TRAIN 0.5740717
B_COST    1.6541923
B_TIME    3.2207268
B_TIME_S  3.6478043


apollo_randCoeff
------------------
function(apollo_beta, apollo_inputs){
  randcoeff = list()

  randcoeff[["B_TIME_RND"]] = B_TIME + B_TIME_S * draws

  return(randcoeff)
}
<bytecode: 0x0000021733a8a158>


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){

  ### Function initialisation: do not change the following three commands
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))

  ### Create list of probabilities P
  P = list()

  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  V[["alt1"]] = ASC_TRAIN + B_TIME_RND * TRAIN_TT_SCALED + B_COST * TRAIN_COST_SCALED
  V[["alt2"]] = ASC_SM + B_TIME_RND * SM_TT_SCALED + B_COST * SM_COST_SCALED
  V[["alt3"]] = ASC_CAR + B_TIME_RND * CAR_TT_SCALED + B_COST * CAR_CO_SCALED


  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2, alt3=3),
    avail         = list(alt1=TRAIN_AV, alt2=SM_AV, alt3=CAR_AV),
    choiceVar     = CHOICE,
    utilities     = V
  )

  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
    ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)

  ### Average across inter-individual draws
  P = apollo_avgInterDraws(P, apollo_inputs, functionality)


  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
