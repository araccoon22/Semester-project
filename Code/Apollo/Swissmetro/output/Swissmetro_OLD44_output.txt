Model run by alexi using Apollo 0.3.2 on R 4.2.3 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : Swissmetro
Model description                           : Mixed logit model on Swissmetro, uncorrelated Lognormals in preference space
Model run at                                : 2024-05-12 14:17:45
Estimation method                           : bfgs
Model diagnosis                             : successful convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -10.828992
     reciprocal of condition number         : 0.0105806
Number of individuals                       : 752
Number of rows in database                  : 6768
Number of modelled outcomes                 : 6768

Number of cores used                        :  4 
Number of inter-individual draws            : 100 (halton)

LL(start)                                   : -5965.36
LL at equal shares, LL(0)                   : -6964.66
LL at observed shares, LL(C)                : -5865
LL(final)                                   : -4131.69
Rho-squared vs equal shares                  :  0.4068 
Adj.Rho-squared vs equal shares              :  0.4056 
Rho-squared vs observed shares               :  0.2955 
Adj.Rho-squared vs observed shares           :  0.2945 
AIC                                         :  8279.39 
BIC                                         :  8333.95 

Estimated parameters                        : 8
Time taken (hh:mm:ss)                       :  00:00:46.23 
     pre-estimation                         :  00:00:15.79 
     estimation                             :  00:00:16.85 
          initial estimation                :  00:00:15.55 
          estimation after rescaling        :  00:00:1.3 
     post-estimation                        :  00:00:13.59 
Iterations                                  :  35  
     initial estimation                     :  34 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
             Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
ASC_CAR        0.3652      0.1028       3.554      0.1583        2.3070
ASC_TRAIN      0.2885      0.1171       2.464      0.3272        0.8817
ASC_SM         0.0000          NA          NA          NA            NA
B_COST        -2.6806      0.1485     -18.049      0.3456       -7.7563
B_COST_S      -0.5136      0.1023      -5.023      0.3724       -1.3793
B_TIME        -4.0478      0.1844     -21.950      0.3990      -10.1461
B_TIME_S       2.1803      0.1055      20.658      0.2068       10.5422
SIGMA_V1      -1.3447      0.1834      -7.332      0.7477       -1.7984
SIGMA_V2      -2.0752      0.1604     -12.939      0.6059       -3.4248


Overview of choices for MNL model component :
                                    alt1    alt2    alt3
Times available                  6768.00 6768.00 5607.00
Times chosen                      908.00 4090.00 1770.00
Percentage chosen overall          13.42   60.43   26.15
Percentage chosen when available   13.42   60.43   31.57



Classical covariance matrix:
              ASC_CAR   ASC_TRAIN      B_COST    B_COST_S      B_TIME
ASC_CAR      0.010560    0.005036  4.7162e-04   -0.001887    0.001668
ASC_TRAIN    0.005036    0.013710   -0.005253    0.001781   -0.013267
B_COST     4.7162e-04   -0.005253    0.022057   -0.001297    0.010345
B_COST_S    -0.001887    0.001781   -0.001297    0.010457   -0.001265
B_TIME       0.001668   -0.013267    0.010345   -0.001265    0.034007
B_TIME_S  -9.5215e-04    0.006893   -0.005177  5.0051e-04   -0.018185
SIGMA_V1     0.002460   -0.013645    0.015980   -0.004577    0.019401
SIGMA_V2     0.001891   -0.009269    0.013267   -0.005193    0.013479
             B_TIME_S    SIGMA_V1    SIGMA_V2
ASC_CAR   -9.5215e-04    0.002460    0.001891
ASC_TRAIN    0.006893   -0.013645   -0.009269
B_COST      -0.005177    0.015980    0.013267
B_COST_S   5.0051e-04   -0.004577   -0.005193
B_TIME      -0.018185    0.019401    0.013479
B_TIME_S     0.011140   -0.010197   -0.006551
SIGMA_V1    -0.010197    0.033634    0.024978
SIGMA_V2    -0.006551    0.024978    0.025724

Robust covariance matrix:
              ASC_CAR   ASC_TRAIN      B_COST    B_COST_S      B_TIME
ASC_CAR      0.025065  5.0639e-04     0.01127    -0.01837    0.003066
ASC_TRAIN  5.0639e-04     0.10705    -0.06118     0.08073   -0.109898
B_COST       0.011270    -0.06118     0.11945    -0.05605    0.097293
B_COST_S    -0.018371     0.08073    -0.05605     0.13865   -0.094791
B_TIME       0.003066    -0.10990     0.09729    -0.09479    0.159165
B_TIME_S    -0.002788     0.05423    -0.04778     0.04896   -0.081568
SIGMA_V1     0.034044    -0.21862     0.16324    -0.20809    0.239701
SIGMA_V2     0.020826    -0.17309     0.14065    -0.17602    0.192506
             B_TIME_S    SIGMA_V1    SIGMA_V2
ASC_CAR     -0.002788     0.03404     0.02083
ASC_TRAIN    0.054228    -0.21862    -0.17309
B_COST      -0.047780     0.16324     0.14065
B_COST_S     0.048959    -0.20809    -0.17602
B_TIME      -0.081568     0.23970     0.19251
B_TIME_S     0.042774    -0.11820    -0.09248
SIGMA_V1    -0.118199     0.55910     0.43319
SIGMA_V2    -0.092476     0.43319     0.36716

Classical correlation matrix:
              ASC_CAR   ASC_TRAIN      B_COST    B_COST_S      B_TIME
ASC_CAR       1.00000      0.4185     0.03090    -0.17957     0.08802
ASC_TRAIN     0.41854      1.0000    -0.30207     0.14873    -0.61441
B_COST        0.03090     -0.3021     1.00000    -0.08537     0.37771
B_COST_S     -0.17957      0.1487    -0.08537     1.00000    -0.06710
B_TIME        0.08802     -0.6144     0.37771    -0.06710     1.00000
B_TIME_S     -0.08779      0.5578    -0.33027     0.04637    -0.93432
SIGMA_V1      0.13052     -0.6354     0.58667    -0.24406     0.57365
SIGMA_V2      0.11472     -0.4936     0.55696    -0.31662     0.45572
             B_TIME_S    SIGMA_V1    SIGMA_V2
ASC_CAR      -0.08779      0.1305      0.1147
ASC_TRAIN     0.55781     -0.6354     -0.4936
B_COST       -0.33027      0.5867      0.5570
B_COST_S      0.04637     -0.2441     -0.3166
B_TIME       -0.93432      0.5737      0.4557
B_TIME_S      1.00000     -0.5268     -0.3870
SIGMA_V1     -0.52680      1.0000      0.8492
SIGMA_V2     -0.38697      0.8492      1.0000

Robust correlation matrix:
              ASC_CAR   ASC_TRAIN      B_COST    B_COST_S      B_TIME
ASC_CAR      1.000000    0.009776      0.2060     -0.3116     0.04853
ASC_TRAIN    0.009776    1.000000     -0.5410      0.6627    -0.84193
B_COST       0.205974   -0.541029      1.0000     -0.4355     0.70562
B_COST_S    -0.311628    0.662660     -0.4355      1.0000    -0.63808
B_TIME       0.048534   -0.841926      0.7056     -0.6381     1.00000
B_TIME_S    -0.085142    0.801390     -0.6685      0.6357    -0.98857
SIGMA_V1     0.287580   -0.893621      0.6317     -0.7474     0.80353
SIGMA_V2     0.217094   -0.873070      0.6716     -0.7802     0.79633
             B_TIME_S    SIGMA_V1    SIGMA_V2
ASC_CAR      -0.08514      0.2876      0.2171
ASC_TRAIN     0.80139     -0.8936     -0.8731
B_COST       -0.66845      0.6317      0.6716
B_COST_S      0.63573     -0.7474     -0.7802
B_TIME       -0.98857      0.8035      0.7963
B_TIME_S      1.00000     -0.7643     -0.7379
SIGMA_V1     -0.76433      1.0000      0.9561
SIGMA_V2     -0.73793      0.9561      1.0000

 20 worst outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 394          0.01248918
 476          0.02439095
 360          0.06171511
  58          0.06994871
 356          0.07945301
 389          0.11367713
 783          0.11532471
 362          0.12147285
 576          0.12311244
  63          0.13458704
 937          0.13521077
 276          0.13744365
 454          0.14687060
 681          0.17748673
  93          0.18398981
 326          0.18694914
 318          0.18933869
 283          0.18953634
 796          0.19110188
 335          0.19394957

Changes in parameter estimates from starting values:
              Initial    Estimate  Difference
ASC_CAR         0.000      0.3652      0.3652
ASC_TRAIN       0.000      0.2885      0.2885
ASC_SM          0.000      0.0000      0.0000
B_COST          0.000     -2.6806     -2.6806
B_COST_S        1.000     -0.5136     -1.5136
B_TIME          0.000     -4.0478     -4.0478
B_TIME_S        1.000      2.1803      1.1803
SIGMA_V1        1.000     -1.3447     -2.3447
SIGMA_V2        1.000     -2.0752     -3.0752

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                         
modelName              "Swissmetro"                                                                  
modelDescr             "Mixed logit model on Swissmetro, uncorrelated Lognormals in preference space"
indivID                "ID"                                                                          
nCores                 "4"                                                                           
outputDirectory        "output/"                                                                     
mixing                 "TRUE"                                                                        
debug                  "FALSE"                                                                       
workInLogs             "FALSE"                                                                       
seed                   "13"                                                                          
HB                     "FALSE"                                                                       
noValidation           "FALSE"                                                                       
noDiagnostics          "FALSE"                                                                       
calculateLLC           "TRUE"                                                                        
panelData              "TRUE"                                                                        
analyticGrad           "TRUE"                                                                        
analyticGrad_manualSet "FALSE"                                                                       
overridePanel          "FALSE"                                                                       
preventOverridePanel   "FALSE"                                                                       
noModification         "FALSE"                                                                       

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling in estimation
---------------------
              Value
ASC_CAR   0.3652398
ASC_TRAIN 0.2884811
B_COST    2.6806492
B_COST_S  0.5136001
B_TIME    4.0478148
B_TIME_S  2.1803100
SIGMA_V1  1.3447464
SIGMA_V2  2.0752313

Scaling used in computing Hessian
---------------------------------
              Value
ASC_CAR   0.3652403
ASC_TRAIN 0.2884809
B_COST    2.6806424
B_COST_S  0.5135999
B_TIME    4.0478220
B_TIME_S  2.1803199
SIGMA_V1  1.3447481
SIGMA_V2  2.0752266


apollo_randCoeff
------------------
function(apollo_beta, apollo_inputs){
  randcoeff = list()

  randcoeff[["B_TIME_RND"]] = B_TIME + B_TIME_S * draws
  randcoeff[["B_COST_RND"]] = B_COST + B_COST_S * draws
  randcoeff[["SIGMA_V1_RND"]] = SIGMA_V1 * draws
  randcoeff[["SIGMA_V2_RND"]] = SIGMA_V2 * draws

  return(randcoeff)
}
<bytecode: 0x0000028d06882a20>


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){

  ### Function initialisation: do not change the following three commands
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))

  ### Create list of probabilities P
  P = list()

  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  V[["alt1"]] = ASC_TRAIN + B_TIME_RND * TRAIN_TT_SCALED + B_COST_RND * TRAIN_COST_SCALED + SIGMA_V1_RND
  V[["alt2"]] = ASC_SM + B_TIME_RND * SM_TT_SCALED + B_COST_RND * SM_COST_SCALED + SIGMA_V2_RND
  V[["alt3"]] = ASC_CAR + B_TIME_RND * CAR_TT_SCALED + B_COST_RND * CAR_CO_SCALED


  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2, alt3=3),
    avail         = list(alt1=TRAIN_AV_SP, alt2=SM_AV, alt3=CAR_AV_SP),
    choiceVar     = CHOICE,
    utilities     = V
  )

  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
    ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)

  ### Average across inter-individual draws
  P = apollo_avgInterDraws(P, apollo_inputs, functionality)


  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
