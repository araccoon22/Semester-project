Model run by alexi using Apollo 0.3.2 on R 4.2.3 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : Swissmetro
Model description                           : Mixed logit model on Swissmetro, uncorrelated Lognormals in preference space
Model run at                                : 2024-05-01 17:26:57
Estimation method                           : bfgs
Model diagnosis                             : successful convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -22.080424
     reciprocal of condition number         : 0.0322422
Number of individuals                       : 752
Number of rows in database                  : 6768
Number of modelled outcomes                 : 6768

Number of cores used                        :  4 
Number of inter-individual draws            : 500 (halton)

LL(start)                                   : -5783.61
LL at equal shares, LL(0)                   : -6964.66
LL at observed shares, LL(C)                : -5865
LL(final)                                   : -4360.24
Rho-squared vs equal shares                  :  0.3739 
Adj.Rho-squared vs equal shares              :  0.3732 
Rho-squared vs observed shares               :  0.2566 
Adj.Rho-squared vs observed shares           :  0.2561 
AIC                                         :  8730.47 
BIC                                         :  8764.57 

Estimated parameters                        : 5
Time taken (hh:mm:ss)                       :  00:02:0.29 
     pre-estimation                         :  00:00:40.77 
     estimation                             :  00:00:43.12 
          initial estimation                :  00:00:37.73 
          estimation after rescaling        :  00:00:5.39 
     post-estimation                        :  00:00:36.41 
Iterations                                  :  16  
     initial estimation                     :  15 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
             Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
ASC_CAR        0.2821     0.05679       4.968      0.1080         2.612
ASC_TRAIN     -0.5727     0.08234      -6.955      0.1470        -3.895
ASC_SM         0.0000          NA          NA          NA            NA
B_COST        -1.6521     0.07761     -21.288      0.2924        -5.651
B_TIME        -3.2216     0.19108     -16.860      0.2289       -14.077
B_TIME_S       3.6476     0.17557      20.775      0.2468        14.781


Overview of choices for MNL model component :
                                    alt1    alt2    alt3
Times available                  6768.00 6768.00 5607.00
Times chosen                      908.00 4090.00 1770.00
Percentage chosen overall          13.42   60.43   26.15
Percentage chosen when available   13.42   60.43   31.57



Classical covariance matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR      0.003225    0.002935  7.4021e-04   -0.004497    0.001082
ASC_TRAIN    0.002935    0.006780  7.6869e-04   -0.006900   -0.001088
B_COST     7.4021e-04  7.6869e-04    0.006023    0.001756   -0.002363
B_TIME      -0.004497   -0.006900    0.001756    0.036511   -0.009890
B_TIME_S     0.001082   -0.001088   -0.002363   -0.009890    0.030826

Robust covariance matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR      0.011665    0.009211    0.003796    -0.01173    0.002701
ASC_TRAIN    0.009211    0.021611    0.007186    -0.01639   -0.001239
B_COST       0.003796    0.007186    0.085471     0.02233   -0.021133
B_TIME      -0.011726   -0.016390    0.022330     0.05238   -0.022541
B_TIME_S     0.002701   -0.001239   -0.021133    -0.02254    0.060899

Classical correlation matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR        1.0000     0.62763      0.1680     -0.4145     0.10856
ASC_TRAIN      0.6276     1.00000      0.1203     -0.4385    -0.07525
B_COST         0.1680     0.12029      1.0000      0.1184    -0.17343
B_TIME        -0.4145    -0.43854      0.1184      1.0000    -0.29478
B_TIME_S       0.1086    -0.07525     -0.1734     -0.2948     1.00000

Robust correlation matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR        1.0000     0.58016      0.1202     -0.4744     0.10134
ASC_TRAIN      0.5802     1.00000      0.1672     -0.4872    -0.03415
B_COST         0.1202     0.16721      1.0000      0.3337    -0.29292
B_TIME        -0.4744    -0.48716      0.3337      1.0000    -0.39913
B_TIME_S       0.1013    -0.03415     -0.2929     -0.3991     1.00000

 20 worst outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 394         0.002480182
  56         0.015261222
  58         0.035007671
 104         0.039056008
 102         0.116035239
 393         0.135750149
 105         0.136359919
 362         0.163298692
 351         0.183293988
  19         0.189713170
 937         0.190069140
 796         0.190112197
  77         0.204330326
 578         0.205178419
  81         0.206962520
 867         0.207251045
 783         0.209569918
  63         0.217104131
 454         0.221601597
 283         0.226459060

Changes in parameter estimates from starting values:
              Initial    Estimate  Difference
ASC_CAR         0.000      0.2821      0.2821
ASC_TRAIN       0.000     -0.5727     -0.5727
ASC_SM          0.000      0.0000      0.0000
B_COST          0.000     -1.6521     -1.6521
B_TIME          0.000     -3.2216     -3.2216
B_TIME_S        1.000      3.6476      2.6476

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                         
modelName              "Swissmetro"                                                                  
modelDescr             "Mixed logit model on Swissmetro, uncorrelated Lognormals in preference space"
indivID                "ID"                                                                          
nCores                 "4"                                                                           
outputDirectory        "output/"                                                                     
mixing                 "TRUE"                                                                        
debug                  "FALSE"                                                                       
workInLogs             "FALSE"                                                                       
seed                   "13"                                                                          
HB                     "FALSE"                                                                       
noValidation           "FALSE"                                                                       
noDiagnostics          "FALSE"                                                                       
calculateLLC           "TRUE"                                                                        
panelData              "TRUE"                                                                        
analyticGrad           "TRUE"                                                                        
analyticGrad_manualSet "FALSE"                                                                       
overridePanel          "FALSE"                                                                       
preventOverridePanel   "FALSE"                                                                       
noModification         "FALSE"                                                                       

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling in estimation
---------------------
              Value
ASC_CAR   0.2821359
ASC_TRAIN 0.5726824
B_COST    1.6518082
B_TIME    3.2217876
B_TIME_S  3.6471301

Scaling used in computing Hessian
---------------------------------
             Value
ASC_CAR   0.282130
ASC_TRAIN 0.572657
B_COST    1.652120
B_TIME    3.221632
B_TIME_S  3.647628


apollo_randCoeff
------------------
function(apollo_beta, apollo_inputs){
  randcoeff = list()

  randcoeff[["B_TIME_RND"]] = B_TIME + B_TIME_S * draws

  return(randcoeff)
}
<bytecode: 0x000001d6a845df70>


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){

  ### Function initialisation: do not change the following three commands
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))

  ### Create list of probabilities P
  P = list()

  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  V[["alt1"]] = ASC_TRAIN + B_TIME_RND * TRAIN_TT_SCALED + B_COST * TRAIN_COST_SCALED
  V[["alt2"]] = ASC_SM + B_TIME_RND * SM_TT_SCALED + B_COST * SM_COST_SCALED
  V[["alt3"]] = ASC_CAR + B_TIME_RND * CAR_TT_SCALED + B_COST * CAR_CO_SCALED


  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2, alt3=3),
    avail         = list(alt1=TRAIN_AV, alt2=SM_AV, alt3=CAR_AV),
    choiceVar     = CHOICE,
    utilities     = V
  )

  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
    ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)

  ### Average across inter-individual draws
  P = apollo_avgInterDraws(P, apollo_inputs, functionality)


  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
