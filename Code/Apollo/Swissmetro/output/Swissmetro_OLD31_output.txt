Model run by alexi using Apollo 0.3.2 on R 4.2.3 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : Swissmetro
Model description                           : Mixed logit model on Swissmetro, uncorrelated Lognormals in preference space
Model run at                                : 2024-05-01 19:57:28
Estimation method                           : bfgs
Model diagnosis                             : successful convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -22.062228
     reciprocal of condition number         : 0.0322999
Number of individuals                       : 752
Number of rows in database                  : 6768
Number of modelled outcomes                 : 6768

Number of cores used                        :  4 
Number of inter-individual draws            : 5000 (halton)

LL(start)                                   : -5783.05
LL at equal shares, LL(0)                   : -6964.66
LL at observed shares, LL(C)                : -5865
LL(final)                                   : -4359.63
Rho-squared vs equal shares                  :  0.374 
Adj.Rho-squared vs equal shares              :  0.3733 
Rho-squared vs observed shares               :  0.2567 
Adj.Rho-squared vs observed shares           :  0.2562 
AIC                                         :  8729.25 
BIC                                         :  8763.35 

Estimated parameters                        : 5
Time taken (hh:mm:ss)                       :  00:22:24.28 
     pre-estimation                         :  00:03:16.94 
     estimation                             :  00:12:4.41 
          initial estimation                :  00:11:34.24 
          estimation after rescaling        :  00:00:30.17 
     post-estimation                        :  00:07:2.92 
Iterations                                  :  18  
     initial estimation                     :  17 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
             Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
ASC_CAR        0.2823     0.05687       4.965      0.1081         2.611
ASC_TRAIN     -0.5739     0.08258      -6.950      0.1474        -3.895
ASC_SM         0.0000          NA          NA          NA            NA
B_COST        -1.6591     0.07810     -21.243      0.2942        -5.640
B_TIME        -3.2228     0.19218     -16.770      0.2302       -13.999
B_TIME_S       3.6508     0.17518      20.840      0.2472        14.771


Overview of choices for MNL model component :
                                    alt1    alt2    alt3
Times available                  6768.00 6768.00 5607.00
Times chosen                      908.00 4090.00 1770.00
Percentage chosen overall          13.42   60.43   26.15
Percentage chosen when available   13.42   60.43   31.57



Classical covariance matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR      0.003234    0.002950  7.3816e-04   -0.004538    0.001074
ASC_TRAIN    0.002950    0.006819  7.7873e-04   -0.006990   -0.001100
B_COST     7.3816e-04  7.7873e-04    0.006100    0.001767   -0.002425
B_TIME      -0.004538   -0.006990    0.001767    0.036934   -0.009632
B_TIME_S     0.001074   -0.001100   -0.002425   -0.009632    0.030688

Robust covariance matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR      0.011695    0.009246    0.003771    -0.01179    0.002719
ASC_TRAIN    0.009246    0.021717    0.007356    -0.01646   -0.001388
B_COST       0.003771    0.007356    0.086533     0.02288   -0.022249
B_TIME      -0.011793   -0.016463    0.022881     0.05300   -0.022256
B_TIME_S     0.002719   -0.001388   -0.022249    -0.02226    0.061087

Classical correlation matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR        1.0000     0.62825      0.1662     -0.4153     0.10777
ASC_TRAIN      0.6282     1.00000      0.1207     -0.4404    -0.07603
B_COST         0.1662     0.12074      1.0000      0.1177    -0.17727
B_TIME        -0.4153    -0.44044      0.1177      1.0000    -0.28610
B_TIME_S       0.1078    -0.07603     -0.1773     -0.2861     1.00000

Robust correlation matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR        1.0000     0.58016      0.1185     -0.4737     0.10174
ASC_TRAIN      0.5802     1.00000      0.1697     -0.4852    -0.03812
B_COST         0.1185     0.16969      1.0000      0.3379    -0.30602
B_TIME        -0.4737    -0.48525      0.3379      1.0000    -0.39115
B_TIME_S       0.1017    -0.03812     -0.3060     -0.3912     1.00000

 20 worst outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 394         0.002421967
  56         0.015013392
  58         0.034643143
 104         0.040359206
 102         0.115287498
 393         0.134473941
 105         0.137442172
 362         0.162709620
 351         0.183305284
  19         0.189059129
 796         0.189549449
 937         0.189659187
  77         0.203500996
 578         0.204589176
  81         0.206668575
 867         0.206707983
 783         0.209309241
  63         0.217156478
 454         0.221481262
 283         0.226164274

Changes in parameter estimates from starting values:
              Initial    Estimate  Difference
ASC_CAR         0.000      0.2823      0.2823
ASC_TRAIN       0.000     -0.5739     -0.5739
ASC_SM          0.000      0.0000      0.0000
B_COST          0.000     -1.6591     -1.6591
B_TIME          0.000     -3.2228     -3.2228
B_TIME_S        1.000      3.6508      2.6508

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                         
modelName              "Swissmetro"                                                                  
modelDescr             "Mixed logit model on Swissmetro, uncorrelated Lognormals in preference space"
indivID                "ID"                                                                          
nCores                 "4"                                                                           
outputDirectory        "output/"                                                                     
mixing                 "TRUE"                                                                        
debug                  "FALSE"                                                                       
workInLogs             "FALSE"                                                                       
seed                   "13"                                                                          
HB                     "FALSE"                                                                       
noValidation           "FALSE"                                                                       
noDiagnostics          "FALSE"                                                                       
calculateLLC           "TRUE"                                                                        
panelData              "TRUE"                                                                        
analyticGrad           "TRUE"                                                                        
analyticGrad_manualSet "FALSE"                                                                       
overridePanel          "FALSE"                                                                       
preventOverridePanel   "FALSE"                                                                       
noModification         "FALSE"                                                                       

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling in estimation
---------------------
              Value
ASC_CAR   0.2823310
ASC_TRAIN 0.5739254
B_COST    1.6589396
B_TIME    3.2226945
B_TIME_S  3.6506619

Scaling used in computing Hessian
---------------------------------
              Value
ASC_CAR   0.2823295
ASC_TRAIN 0.5739435
B_COST    1.6591276
B_TIME    3.2228491
B_TIME_S  3.6507638


apollo_randCoeff
------------------
function(apollo_beta, apollo_inputs){
  randcoeff = list()

  randcoeff[["B_TIME_RND"]] = B_TIME + B_TIME_S * draws

  return(randcoeff)
}
<bytecode: 0x00000148ae525be8>


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){

  ### Function initialisation: do not change the following three commands
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))

  ### Create list of probabilities P
  P = list()

  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  V[["alt1"]] = ASC_TRAIN + B_TIME_RND * TRAIN_TT_SCALED + B_COST * TRAIN_COST_SCALED
  V[["alt2"]] = ASC_SM + B_TIME_RND * SM_TT_SCALED + B_COST * SM_COST_SCALED
  V[["alt3"]] = ASC_CAR + B_TIME_RND * CAR_TT_SCALED + B_COST * CAR_CO_SCALED


  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2, alt3=3),
    avail         = list(alt1=TRAIN_AV, alt2=SM_AV, alt3=CAR_AV),
    choiceVar     = CHOICE,
    utilities     = V
  )

  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
    ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)

  ### Average across inter-individual draws
  P = apollo_avgInterDraws(P, apollo_inputs, functionality)


  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
