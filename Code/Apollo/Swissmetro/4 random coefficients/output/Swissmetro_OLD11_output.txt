Model run by alexi using Apollo 0.3.2 on R 4.2.3 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : Swissmetro
Model description                           : Mixed logit model on Swissmetro, uncorrelated Lognormals in preference space
Model run at                                : 2024-05-15 13:02:35
Estimation method                           : bfgs
Model diagnosis                             : successful convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -4.673311
     reciprocal of condition number         : 0.00928443
Number of individuals                       : 752
Number of rows in database                  : 6768
Number of modelled outcomes                 : 6768

Number of cores used                        :  4 
Number of inter-individual draws            : 500 (halton)

LL(start)                                   : -4846.2
LL at equal shares, LL(0)                   : -6964.66
LL at observed shares, LL(C)                : -5865
LL(final)                                   : -3574.31
Rho-squared vs equal shares                  :  0.4868 
Adj.Rho-squared vs equal shares              :  0.4856 
Rho-squared vs observed shares               :  0.3906 
Adj.Rho-squared vs observed shares           :  0.3895 
AIC                                         :  7164.62 
BIC                                         :  7219.18 

Estimated parameters                        : 8
Time taken (hh:mm:ss)                       :  00:03:8.1 
     pre-estimation                         :  00:01:2.05 
     estimation                             :  00:01:7.51 
          initial estimation                :  00:01:1.13 
          estimation after rescaling        :  00:00:6.37 
     post-estimation                        :  00:00:58.55 
Iterations                                  :  34  
     initial estimation                     :  33 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
             Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
ASC_CAR        0.6171      0.1736       3.555      0.2259         2.732
ASC_TRAIN     -1.3682      0.3261      -4.196      0.3889        -3.518
ASC_SM         0.0000          NA          NA          NA            NA
B_COST        -4.7810      0.2807     -17.032      0.3005       -15.908
B_COST_S       3.1273      0.2150      14.542      0.2361        13.243
B_TIME        -5.6460      0.2986     -18.911      0.3603       -15.669
B_TIME_S       3.9900      0.2202      18.122      0.2621        15.222
SIGMA_1        3.1176      0.2387      13.062      0.2679        11.638
SIGMA_2        2.8937      0.1841      15.719      0.2212        13.081


Overview of choices for MNL model component :
                                    alt1    alt2    alt3
Times available                  6768.00 6768.00 5607.00
Times chosen                      908.00 4090.00 1770.00
Percentage chosen overall          13.42   60.43   26.15
Percentage chosen when available   13.42   60.43   31.57



Classical covariance matrix:
              ASC_CAR   ASC_TRAIN      B_COST    B_COST_S      B_TIME
ASC_CAR      0.030139    0.032287   4.277e-06    0.007109    -0.02119
ASC_TRAIN    0.032287    0.106322   -0.001742    0.012510    -0.02666
B_COST      4.277e-06   -0.001742    0.078801   -0.044648     0.03954
B_COST_S     0.007109    0.012510   -0.044648    0.046245    -0.02783
B_TIME      -0.021191   -0.026659    0.039540   -0.027830     0.08913
B_TIME_S     0.014582    0.020729   -0.028947    0.021119    -0.06354
SIGMA_1     -0.007609   -0.051798   -0.008805    0.003426    -0.01089
SIGMA_2      0.007119    0.007390   -0.023792    0.015045    -0.02932
             B_TIME_S     SIGMA_1     SIGMA_2
ASC_CAR      0.014582   -0.007609    0.007119
ASC_TRAIN    0.020729   -0.051798    0.007390
B_COST      -0.028947   -0.008805   -0.023792
B_COST_S     0.021119    0.003426    0.015045
B_TIME      -0.063536   -0.010889   -0.029316
B_TIME_S     0.048477    0.006515    0.021131
SIGMA_1      0.006515    0.056971    0.005184
SIGMA_2      0.021131    0.005184    0.033888

Robust covariance matrix:
              ASC_CAR   ASC_TRAIN      B_COST    B_COST_S      B_TIME
ASC_CAR      0.051021     0.04990   -0.002956     0.02042   -0.046161
ASC_TRAIN    0.049902     0.15127   -0.022917     0.04194   -0.054937
B_COST      -0.002956    -0.02292    0.090329    -0.05345    0.058780
B_COST_S     0.020418     0.04194   -0.053454     0.05577   -0.048964
B_TIME      -0.046161    -0.05494    0.058780    -0.04896    0.129838
B_TIME_S     0.032819     0.04336   -0.043563     0.03730   -0.093337
SIGMA_1     -0.010987    -0.07363    0.003621    -0.01088   -0.003813
SIGMA_2      0.020021     0.01980   -0.034242     0.03301   -0.053379
             B_TIME_S     SIGMA_1     SIGMA_2
ASC_CAR       0.03282   -0.010987     0.02002
ASC_TRAIN     0.04336   -0.073629     0.01980
B_COST       -0.04356    0.003621    -0.03424
B_COST_S      0.03730   -0.010880     0.03301
B_TIME       -0.09334   -0.003813    -0.05338
B_TIME_S      0.06870  6.9103e-04     0.03870
SIGMA_1    6.9103e-04    0.071766  9.0418e-04
SIGMA_2       0.03870  9.0418e-04     0.04893

Classical correlation matrix:
              ASC_CAR   ASC_TRAIN      B_COST    B_COST_S      B_TIME
ASC_CAR        1.0000     0.57036   8.776e-05     0.19041     -0.4089
ASC_TRAIN      0.5704     1.00000    -0.01904     0.17841     -0.2738
B_COST      8.776e-05    -0.01904     1.00000    -0.73960      0.4718
B_COST_S       0.1904     0.17841    -0.73960     1.00000     -0.4335
B_TIME        -0.4089    -0.27384     0.47178    -0.43346      1.0000
B_TIME_S       0.3815     0.28874    -0.46835     0.44604     -0.9666
SIGMA_1       -0.1836    -0.66554    -0.13141     0.06675     -0.1528
SIGMA_2        0.2228     0.12311    -0.46042     0.38004     -0.5334
             B_TIME_S     SIGMA_1     SIGMA_2
ASC_CAR        0.3815    -0.18362      0.2228
ASC_TRAIN      0.2887    -0.66554      0.1231
B_COST        -0.4684    -0.13141     -0.4604
B_COST_S       0.4460     0.06675      0.3800
B_TIME        -0.9666    -0.15280     -0.5334
B_TIME_S       1.0000     0.12397      0.5214
SIGMA_1        0.1240     1.00000      0.1180
SIGMA_2        0.5214     0.11797      1.0000

Robust correlation matrix:
              ASC_CAR   ASC_TRAIN      B_COST    B_COST_S      B_TIME
ASC_CAR       1.00000      0.5680    -0.04355      0.3828    -0.56715
ASC_TRAIN     0.56801      1.0000    -0.19605      0.4566    -0.39200
B_COST       -0.04355     -0.1961     1.00000     -0.7531     0.54277
B_COST_S      0.38279      0.4566    -0.75315      1.0000    -0.57543
B_TIME       -0.56715     -0.3920     0.54277     -0.5754     1.00000
B_TIME_S      0.55433      0.4253    -0.55299      0.6027    -0.98825
SIGMA_1      -0.18158     -0.7067     0.04498     -0.1720    -0.03950
SIGMA_2       0.40069      0.2301    -0.51504      0.6320    -0.66969
             B_TIME_S     SIGMA_1     SIGMA_2
ASC_CAR      0.554330   -0.181577     0.40069
ASC_TRAIN    0.425292   -0.706659     0.23012
B_COST      -0.552988    0.044976    -0.51504
B_COST_S     0.602686   -0.171979     0.63200
B_TIME      -0.988252   -0.039496    -0.66969
B_TIME_S     1.000000    0.009841     0.66754
SIGMA_1      0.009841    1.000000     0.01526
SIGMA_2      0.667537    0.015258     1.00000

 20 worst outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 394           0.1443999
 389           0.1758863
  19           0.1776188
 321           0.1902047
 362           0.2165345
 681           0.2257544
 238           0.2334407
 283           0.2493372
 733           0.2526201
  63           0.2555813
 360           0.2566441
 328           0.2567030
 807           0.2632519
 454           0.2662495
 274           0.2705593
 586           0.2726434
 282           0.2726829
 887           0.2738070
  56           0.2747626
 634           0.2750777

Changes in parameter estimates from starting values:
              Initial    Estimate  Difference
ASC_CAR         0.000      0.6171      0.6171
ASC_TRAIN       0.000     -1.3682     -1.3682
ASC_SM          0.000      0.0000      0.0000
B_COST          0.000     -4.7810     -4.7810
B_COST_S        1.000      3.1273      2.1273
B_TIME          0.000     -5.6460     -5.6460
B_TIME_S        1.000      3.9900      2.9900
SIGMA_1         1.000      3.1176      2.1176
SIGMA_2         1.000      2.8937      1.8937

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                         
modelName              "Swissmetro"                                                                  
modelDescr             "Mixed logit model on Swissmetro, uncorrelated Lognormals in preference space"
indivID                "ID"                                                                          
nCores                 "4"                                                                           
outputDirectory        "output/"                                                                     
mixing                 "TRUE"                                                                        
debug                  "FALSE"                                                                       
workInLogs             "FALSE"                                                                       
seed                   "13"                                                                          
HB                     "FALSE"                                                                       
noValidation           "FALSE"                                                                       
noDiagnostics          "FALSE"                                                                       
calculateLLC           "TRUE"                                                                        
panelData              "TRUE"                                                                        
analyticGrad           "TRUE"                                                                        
analyticGrad_manualSet "FALSE"                                                                       
overridePanel          "FALSE"                                                                       
preventOverridePanel   "FALSE"                                                                       
noModification         "FALSE"                                                                       

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling in estimation
---------------------
              Value
ASC_CAR   0.6170926
ASC_TRAIN 1.3682259
B_COST    4.7810303
B_COST_S  3.1272899
B_TIME    5.6460224
B_TIME_S  3.9899675
SIGMA_1   3.1176076
SIGMA_2   2.8936529

Scaling used in computing Hessian
---------------------------------
              Value
ASC_CAR   0.6170926
ASC_TRAIN 1.3682254
B_COST    4.7810371
B_COST_S  3.1272859
B_TIME    5.6460123
B_TIME_S  3.9899702
SIGMA_1   3.1176102
SIGMA_2   2.8936529


apollo_randCoeff
------------------
function(apollo_beta, apollo_inputs){
  randcoeff = list()


  randcoeff[["B_COST_RND"]] = B_COST + B_COST_S * draws_c
  randcoeff[["B_TIME_RND"]] = B_TIME + B_TIME_S * draws_t
  randcoeff[["SIGMA_CAR_RND"]] = SIGMA_1 * draws_1
  randcoeff[["SIGMA_SM_RND"]] = SIGMA_2 * draws_2

  return(randcoeff)
}
<bytecode: 0x0000016ded9d4868>


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){

  ### Function initialisation: do not change the following three commands
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))

  ### Create list of probabilities P
  P = list()

  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  V[["alt1"]] = ASC_TRAIN + B_TIME_RND * TRAIN_TT_SCALED + B_COST_RND * TRAIN_COST_SCALED + SIGMA_CAR_RND
  V[["alt2"]] = ASC_SM + B_TIME_RND * SM_TT_SCALED + B_COST_RND * SM_COST_SCALED + SIGMA_SM_RND
  V[["alt3"]] = ASC_CAR + B_TIME_RND * CAR_TT_SCALED + B_COST_RND * CAR_CO_SCALED


  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2, alt3=3),
    avail         = list(alt1=TRAIN_AV_SP, alt2=SM_AV, alt3=CAR_AV_SP),
    choiceVar     = CHOICE,
    utilities     = V
  )

  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
    ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)

  ### Average across inter-individual draws
  P = apollo_avgInterDraws(P, apollo_inputs, functionality)


  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
