Model run by alexi using Apollo 0.3.2 on R 4.2.3 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : Swissmetro
Model description                           : Mixed logit model on Swissmetro, uncorrelated Lognormals in preference space
Model run at                                : 2024-05-01 17:07:52
Estimation method                           : bfgs
Model diagnosis                             : successful convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -21.48746
     reciprocal of condition number         : 0.0314182
Number of individuals                       : 752
Number of rows in database                  : 6768
Number of modelled outcomes                 : 6768

Number of cores used                        :  4 
Number of inter-individual draws            : 2000 (halton)

LL(start)                                   : -5783.22
LL at equal shares, LL(0)                   : -6964.66
LL at observed shares, LL(C)                : -5865
LL(final)                                   : -4359.86
Rho-squared vs equal shares                  :  0.374 
Adj.Rho-squared vs equal shares              :  0.3733 
Rho-squared vs observed shares               :  0.2566 
Adj.Rho-squared vs observed shares           :  0.2561 
AIC                                         :  8729.72 
BIC                                         :  8763.82 

Estimated parameters                        : 5
Time taken (hh:mm:ss)                       :  00:06:16.28 
     pre-estimation                         :  00:01:41.92 
     estimation                             :  00:02:27.53 
          initial estimation                :  00:02:6.71 
          estimation after rescaling        :  00:00:20.81 
     post-estimation                        :  00:02:6.84 
Iterations                                  :  16  
     initial estimation                     :  15 
     estimation after rescaling             :  1 

Unconstrained optimisation.

Estimates:
             Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
ASC_CAR        0.2823     0.05723       4.932      0.1092         2.586
ASC_TRAIN     -0.5735     0.08383      -6.841      0.1506        -3.808
ASC_SM         0.0000          NA          NA          NA            NA
B_COST        -1.6555     0.07777     -21.286      0.2926        -5.659
B_TIME        -3.2236     0.19974     -16.139      0.2461       -13.098
B_TIME_S       3.6465     0.17770      20.521      0.2533        14.395


Overview of choices for MNL model component :
                                    alt1    alt2    alt3
Times available                  6768.00 6768.00 5607.00
Times chosen                      908.00 4090.00 1770.00
Percentage chosen overall          13.42   60.43   26.15
Percentage chosen when available   13.42   60.43   31.57



Classical covariance matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR      0.003275    0.003044  7.4223e-04   -0.004895  8.9514e-04
ASC_TRAIN    0.003044    0.007027  7.7770e-04   -0.007783   -0.001506
B_COST     7.4223e-04  7.7770e-04    0.006049    0.001739   -0.002383
B_TIME      -0.004895   -0.007783    0.001739    0.039897   -0.008122
B_TIME_S   8.9514e-04   -0.001506   -0.002383   -0.008122    0.031577

Robust covariance matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR      0.011914    0.009717    0.003748    -0.01318    0.001911
ASC_TRAIN    0.009717    0.022684    0.007123    -0.01936   -0.003009
B_COST       0.003748    0.007123    0.085586     0.02296   -0.021050
B_TIME      -0.013184   -0.019357    0.022964     0.06057   -0.017243
B_TIME_S     0.001911   -0.003009   -0.021050    -0.01724    0.064169

Classical correlation matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR       1.00000      0.6346      0.1668     -0.4282     0.08802
ASC_TRAIN     0.63458      1.0000      0.1193     -0.4648    -0.10113
B_COST        0.16675      0.1193      1.0000      0.1120    -0.17240
B_TIME       -0.42820     -0.4648      0.1120      1.0000    -0.22882
B_TIME_S      0.08802     -0.1011     -0.1724     -0.2288     1.00000

Robust correlation matrix:
              ASC_CAR   ASC_TRAIN      B_COST      B_TIME    B_TIME_S
ASC_CAR       1.00000     0.59110      0.1174     -0.4908     0.06910
ASC_TRAIN     0.59110     1.00000      0.1617     -0.5222    -0.07886
B_COST        0.11737     0.16166      1.0000      0.3189    -0.28405
B_TIME       -0.49076    -0.52222      0.3189      1.0000    -0.27657
B_TIME_S      0.06910    -0.07886     -0.2840     -0.2766     1.00000

 20 worst outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 394         0.002451157
  56         0.015138954
  58         0.034825089
 104         0.040250900
 102         0.115660695
 393         0.134957507
 105         0.136026084
 362         0.163014687
 351         0.183341920
  19         0.188693048
 796         0.189832950
 937         0.189916575
  77         0.203924733
 578         0.204847272
  81         0.206816719
 867         0.207010839
 783         0.209341044
  63         0.217206535
 454         0.221654380
 283         0.226297557

Changes in parameter estimates from starting values:
              Initial    Estimate  Difference
ASC_CAR         0.000      0.2823      0.2823
ASC_TRAIN       0.000     -0.5735     -0.5735
ASC_SM          0.000      0.0000      0.0000
B_COST          0.000     -1.6555     -1.6555
B_TIME          0.000     -3.2236     -3.2236
B_TIME_S        1.000      3.6465      2.6465

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                         
modelName              "Swissmetro"                                                                  
modelDescr             "Mixed logit model on Swissmetro, uncorrelated Lognormals in preference space"
indivID                "ID"                                                                          
nCores                 "4"                                                                           
outputDirectory        "output/"                                                                     
mixing                 "TRUE"                                                                        
debug                  "FALSE"                                                                       
workInLogs             "FALSE"                                                                       
seed                   "13"                                                                          
HB                     "FALSE"                                                                       
noValidation           "FALSE"                                                                       
noDiagnostics          "FALSE"                                                                       
calculateLLC           "TRUE"                                                                        
panelData              "TRUE"                                                                        
analyticGrad           "TRUE"                                                                        
analyticGrad_manualSet "FALSE"                                                                       
overridePanel          "FALSE"                                                                       
preventOverridePanel   "FALSE"                                                                       
noModification         "FALSE"                                                                       

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling in estimation
---------------------
              Value
ASC_CAR   0.2822759
ASC_TRAIN 0.5735059
B_COST    1.6551884
B_TIME    3.2237768
B_TIME_S  3.6459112

Scaling used in computing Hessian
---------------------------------
              Value
ASC_CAR   0.2822702
ASC_TRAIN 0.5734859
B_COST    1.6554805
B_TIME    3.2236138
B_TIME_S  3.6465011


apollo_randCoeff
------------------
function(apollo_beta, apollo_inputs){
  randcoeff = list()

  randcoeff[["B_TIME_RND"]] = B_TIME + B_TIME_S * draws

  return(randcoeff)
}
<bytecode: 0x0000024d122dbd68>


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, functionality="estimate"){

  ### Function initialisation: do not change the following three commands
  ### Attach inputs and detach after function exit
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))

  ### Create list of probabilities P
  P = list()

  ### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
  V = list()
  V[["alt1"]] = ASC_TRAIN + B_TIME_RND * TRAIN_TT_SCALED + B_COST * TRAIN_COST_SCALED
  V[["alt2"]] = ASC_SM + B_TIME_RND * SM_TT_SCALED + B_COST * SM_COST_SCALED
  V[["alt3"]] = ASC_CAR + B_TIME_RND * CAR_TT_SCALED + B_COST * CAR_CO_SCALED


  ### Define settings for MNL model component
  mnl_settings = list(
    alternatives  = c(alt1=1, alt2=2, alt3=3),
    avail         = list(alt1=TRAIN_AV, alt2=SM_AV, alt3=CAR_AV),
    choiceVar     = CHOICE,
    utilities     = V
  )

  ### Compute probabilities using MNL model
  P[["model"]] = apollo_mnl(mnl_settings, functionality)
  
    ### Take product across observation for same individual
  P = apollo_panelProd(P, apollo_inputs, functionality)

  ### Average across inter-individual draws
  P = apollo_avgInterDraws(P, apollo_inputs, functionality)


  ### Prepare and return outputs of function
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
